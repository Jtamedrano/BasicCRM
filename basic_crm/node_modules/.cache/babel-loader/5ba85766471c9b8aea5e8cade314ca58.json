{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jtamedrano/Projects/BasicCRM-React/basic_crm/src/comps/Home/Dashboard/MainSection/CustomerTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from \"react\";\nimport shortid from \"shortid\";\nimport Table, { useTable } from \"react-table\";\n\nfunction CustomerTable(props) {\n  _s();\n\n  const {\n    customers\n  } = props;\n  const data = useMemo(() => [{\n    name: \"Jesse\",\n    favorite: false\n  }, {\n    name: \"Gaby\",\n    favorite: true\n  }, {\n    name: \"Mom\",\n    favorite: false\n  }, {\n    name: \"Dad\",\n    favorite: false\n  }, {\n    name: \"Melissa\",\n    favorite: false\n  }, {\n    name: \"Emily\",\n    favorite: false\n  }, {\n    name: \"Gisselle\",\n    favorite: false\n  }, {\n    name: \"Vixen\",\n    favorite: false\n  }], []);\n  const columns = useMemo(() => [{\n    Header: \"Name\",\n    accessor: \"name\"\n  }, {\n    Header: \"Favorite\",\n    accessor: \"favorite\"\n  }], []);\n  const table = useTable({\n    columns,\n    data\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = table;\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          children: column.render(\"Header\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: customers.length > 10 ? customers.map((customer, i) => {\n        const mostRecentInteraction = customer.interactions.reduce((t, s) => {\n          const currentDate = new Date(s);\n          const previousDate = new Date(t);\n          if (!previousDate) return currentDate;else return previousDate > currentDate ? previousDate : currentDate;\n        });\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: i + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"\",\n              id: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-star\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: customer.interactions.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: mostRecentInteraction.toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 19\n          }, this)]\n        }, shortid.generate(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this);\n      }) : Array(10).fill(0, 0, 10).map((_, i) => {\n        if (i < customers.length) {\n          const mostRecentInteraction = customers[i].interactions.reduce((t, s) => {\n            const currentDate = new Date(s);\n            const previousDate = new Date(t);\n\n            if (!previousDate) {\n              return currentDate;\n            } else {\n              return previousDate > currentDate ? previousDate : currentDate;\n            }\n          });\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: i + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                name: \"\",\n                id: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"far fa-star\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: customers[i].name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: customers[i].interactions.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: mostRecentInteraction.toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 23\n            }, this)]\n          }, shortid.generate(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: i + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 23\n            }, this)]\n          }, shortid.generate(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CustomerTable, \"arSsCZMR6tBlOJPDjuvhKXu7wAg=\", false, function () {\n  return [useTable];\n});\n\n_c = CustomerTable;\nexport default CustomerTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerTable\");","map":{"version":3,"sources":["/Users/jtamedrano/Projects/BasicCRM-React/basic_crm/src/comps/Home/Dashboard/MainSection/CustomerTable.jsx"],"names":["React","useMemo","shortid","Table","useTable","CustomerTable","props","customers","data","name","favorite","columns","Header","accessor","table","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","length","customer","i","mostRecentInteraction","interactions","reduce","t","s","currentDate","Date","previousDate","toLocaleDateString","generate","Array","fill","_"],"mappings":"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","sourcesContent":["import React, { useMemo } from \"react\";\nimport shortid from \"shortid\";\nimport Table, { useTable } from \"react-table\";\n\nfunction CustomerTable(props) {\n  const { customers } = props;\n\n  const data = useMemo(\n    () => [\n      { name: \"Jesse\", favorite: false },\n      { name: \"Gaby\", favorite: true },\n      { name: \"Mom\", favorite: false },\n      { name: \"Dad\", favorite: false },\n      { name: \"Melissa\", favorite: false },\n      { name: \"Emily\", favorite: false },\n      { name: \"Gisselle\", favorite: false },\n      { name: \"Vixen\", favorite: false },\n    ],\n    []\n  );\n\n  const columns = useMemo(\n    () => [\n      { Header: \"Name\", accessor: \"name\" },\n      { Header: \"Favorite\", accessor: \"favorite\" },\n    ],\n    []\n  );\n\n  const table = useTable({ columns, data });\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = table;\n  return (\n    <table {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody>\n        {customers.length > 10\n          ? customers.map((customer, i) => {\n              const mostRecentInteraction = customer.interactions.reduce(\n                (t, s) => {\n                  const currentDate = new Date(s);\n                  const previousDate = new Date(t);\n                  if (!previousDate) return currentDate;\n                  else\n                    return previousDate > currentDate\n                      ? previousDate\n                      : currentDate;\n                }\n              );\n\n              return (\n                <tr key={shortid.generate()}>\n                  <td>{i + 1}</td>\n                  <td>\n                    <input type=\"checkbox\" name=\"\" id=\"\" />\n                  </td>\n                  <td>\n                    <i className=\"far fa-star\"></i>\n                  </td>\n                  <td>{customer.name}</td>\n                  <td>{customer.interactions.length}</td>\n                  <td>{mostRecentInteraction.toLocaleDateString()}</td>\n                </tr>\n              );\n            })\n          : Array(10)\n              .fill(0, 0, 10)\n              .map((_, i) => {\n                if (i < customers.length) {\n                  const mostRecentInteraction = customers[\n                    i\n                  ].interactions.reduce((t, s) => {\n                    const currentDate = new Date(s);\n                    const previousDate = new Date(t);\n                    if (!previousDate) {\n                      return currentDate;\n                    } else {\n                      return previousDate > currentDate\n                        ? previousDate\n                        : currentDate;\n                    }\n                  });\n\n                  return (\n                    <tr key={shortid.generate()}>\n                      <td>{i + 1}</td>\n                      <td>\n                        <input type=\"checkbox\" name=\"\" id=\"\" />\n                      </td>\n                      <td>\n                        <i className=\"far fa-star\"></i>\n                      </td>\n                      <td>{customers[i].name}</td>\n                      <td>{customers[i].interactions.length}</td>\n                      <td>{mostRecentInteraction.toLocaleDateString()}</td>\n                    </tr>\n                  );\n                } else {\n                  return (\n                    <tr key={shortid.generate()}>\n                      <td>{i + 1}</td>\n                      <td></td>\n                      <td></td>\n                      <td></td>\n                      <td></td>\n                      <td></td>\n                    </tr>\n                  );\n                }\n              })}\n      </tbody>\n    </table>\n  );\n}\n\nexport default CustomerTable;\n"]},"metadata":{},"sourceType":"module"}