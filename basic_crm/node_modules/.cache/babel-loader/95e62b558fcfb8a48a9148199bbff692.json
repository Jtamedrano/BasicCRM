{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jtamedrano/Projects/BasicCRM-React/basic_crm/src/comps/Home/Dashboard/MainSection/CustomerTable.jsx\";\nimport React from \"react\";\nimport shortid from \"shortid\";\nimport \"react-tabulator/lib/styles.css\";\nimport { ReactTabulator as Tabulator } from \"react-tabulator\";\n\nfunction CustomerTable(props) {\n  const {\n    customers\n  } = props;\n  const columns = [{\n    title: \"Name\",\n    field: \"name\",\n    width: 150\n  }];\n  const data = customers.map(customer => {\n    Object.keys(customer).forEach(key => {\n      console.log(key + \":\", customer[key]);\n\n      if (key === \"interactions\") {\n        customer[\"interactions\"] = customer.interactions.reduce((t, s) => {\n          return t > s ? t : s;\n        });\n      }\n    });\n  });\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Tabulator, {\n      data: data,\n      columns: columns,\n      tooltips: true,\n      layout: \"fitData\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false) // <table>\n  //   <thead>\n  //     <tr>\n  //       <th></th>\n  //       <th>\n  //         <input type=\"checkbox\" name=\"\" id=\"\" />\n  //       </th>\n  //       <th></th>\n  //       <th>Name</th>\n  //       <th>Number of Interactions</th>\n  //       <th>Last Interaction</th>\n  //     </tr>\n  //   </thead>\n  //   <tbody>\n  //     {customers.length > 10\n  //       ? customers.map((customer, i) => {\n  //           const mostRecentInteraction = customer.interactions.reduce(\n  //             (t, s) => {\n  //               const currentDate = new Date(s);\n  //               const previousDate = new Date(t);\n  //               if (!previousDate) return currentDate;\n  //               else\n  //                 return previousDate > currentDate\n  //                   ? previousDate\n  //                   : currentDate;\n  //             }\n  //           );\n  //           return (\n  //             <tr key={shortid.generate()}>\n  //               <td>{i + 1}</td>\n  //               <td>\n  //                 <input type=\"checkbox\" name=\"\" id=\"\" />\n  //               </td>\n  //               <td>\n  //                 <i className=\"far fa-star\"></i>\n  //               </td>\n  //               <td>{customer.name}</td>\n  //               <td>{customer.interactions.length}</td>\n  //               <td>{mostRecentInteraction.toLocaleDateString()}</td>\n  //             </tr>\n  //           );\n  //         })\n  //       : Array(10)\n  //           .fill(0, 0, 10)\n  //           .map((_, i) => {\n  //             if (i < customers.length) {\n  //               const mostRecentInteraction = customers[\n  //                 i\n  //               ].interactions.reduce((t, s) => {\n  //                 const currentDate = new Date(s);\n  //                 const previousDate = new Date(t);\n  //                 if (!previousDate) {\n  //                   return currentDate;\n  //                 } else {\n  //                   return previousDate > currentDate\n  //                     ? previousDate\n  //                     : currentDate;\n  //                 }\n  //               });\n  //               return (\n  //                 <tr key={shortid.generate()}>\n  //                   <td>{i + 1}</td>\n  //                   <td>\n  //                     <input type=\"checkbox\" name=\"\" id=\"\" />\n  //                   </td>\n  //                   <td>\n  //                     <i className=\"far fa-star\"></i>\n  //                   </td>\n  //                   <td>{customers[i].name}</td>\n  //                   <td>{customers[i].interactions.length}</td>\n  //                   <td>{mostRecentInteraction.toLocaleDateString()}</td>\n  //                 </tr>\n  //               );\n  //             } else {\n  //               return (\n  //                 <tr key={shortid.generate()}>\n  //                   <td>{i + 1}</td>\n  //                   <td></td>\n  //                   <td></td>\n  //                   <td></td>\n  //                   <td></td>\n  //                   <td></td>\n  //                 </tr>\n  //               );\n  //             }\n  //           })}\n  //   </tbody>\n  // </table>\n  ;\n}\n\n_c = CustomerTable;\nexport default CustomerTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerTable\");","map":{"version":3,"sources":["/Users/jtamedrano/Projects/BasicCRM-React/basic_crm/src/comps/Home/Dashboard/MainSection/CustomerTable.jsx"],"names":["React","shortid","ReactTabulator","Tabulator","CustomerTable","props","customers","columns","title","field","width","data","map","customer","Object","keys","forEach","key","console","log","interactions","reduce","t","s"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAO,gCAAP;AACA,SAASC,cAAc,IAAIC,SAA3B,QAA4C,iBAA5C;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAgBD,KAAtB;AAEA,QAAME,OAAO,GAAG,CAAC;AAAEC,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,KAAK,EAAE,MAAxB;AAAgCC,IAAAA,KAAK,EAAE;AAAvC,GAAD,CAAhB;AACA,QAAMC,IAAI,GAAGL,SAAS,CAACM,GAAV,CAAeC,QAAD,IAAc;AACvCC,IAAAA,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsBG,OAAtB,CAA+BC,GAAD,IAAS;AACrCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,GAAG,GAAlB,EAAuBJ,QAAQ,CAACI,GAAD,CAA/B;;AACA,UAAIA,GAAG,KAAK,cAAZ,EAA4B;AAC1BJ,QAAAA,QAAQ,CAAC,cAAD,CAAR,GAA2BA,QAAQ,CAACO,YAAT,CAAsBC,MAAtB,CAA6B,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAChE,iBAAOD,CAAC,GAAGC,CAAJ,GAAQD,CAAR,GAAYC,CAAnB;AACD,SAF0B,CAA3B;AAGD;AACF,KAPD;AAQD,GATY,CAAb;AAUAL,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACA,sBACE;AAAA,2BACE,QAAC,SAAD;AACE,MAAA,IAAI,EAAEA,IADR;AAEE,MAAA,OAAO,EAAEJ,OAFX;AAGE,MAAA,QAAQ,EAAE,IAHZ;AAIE,MAAA,MAAM,EAAE;AAJV;AAAA;AAAA;AAAA;AAAA;AADF,mBADF,CASE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlGF;AAoGD;;KAnHQH,a;AAqHT,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport shortid from \"shortid\";\nimport \"react-tabulator/lib/styles.css\";\nimport { ReactTabulator as Tabulator } from \"react-tabulator\";\n\nfunction CustomerTable(props) {\n  const { customers } = props;\n\n  const columns = [{ title: \"Name\", field: \"name\", width: 150 }];\n  const data = customers.map((customer) => {\n    Object.keys(customer).forEach((key) => {\n      console.log(key + \":\", customer[key]);\n      if (key === \"interactions\") {\n        customer[\"interactions\"] = customer.interactions.reduce((t, s) => {\n          return t > s ? t : s;\n        });\n      }\n    });\n  });\n  console.log(data);\n  return (\n    <>\n      <Tabulator\n        data={data}\n        columns={columns}\n        tooltips={true}\n        layout={\"fitData\"}\n      />\n    </>\n    // <table>\n    //   <thead>\n    //     <tr>\n    //       <th></th>\n    //       <th>\n    //         <input type=\"checkbox\" name=\"\" id=\"\" />\n    //       </th>\n    //       <th></th>\n    //       <th>Name</th>\n    //       <th>Number of Interactions</th>\n    //       <th>Last Interaction</th>\n    //     </tr>\n    //   </thead>\n    //   <tbody>\n    //     {customers.length > 10\n    //       ? customers.map((customer, i) => {\n    //           const mostRecentInteraction = customer.interactions.reduce(\n    //             (t, s) => {\n    //               const currentDate = new Date(s);\n    //               const previousDate = new Date(t);\n    //               if (!previousDate) return currentDate;\n    //               else\n    //                 return previousDate > currentDate\n    //                   ? previousDate\n    //                   : currentDate;\n    //             }\n    //           );\n\n    //           return (\n    //             <tr key={shortid.generate()}>\n    //               <td>{i + 1}</td>\n    //               <td>\n    //                 <input type=\"checkbox\" name=\"\" id=\"\" />\n    //               </td>\n    //               <td>\n    //                 <i className=\"far fa-star\"></i>\n    //               </td>\n    //               <td>{customer.name}</td>\n    //               <td>{customer.interactions.length}</td>\n    //               <td>{mostRecentInteraction.toLocaleDateString()}</td>\n    //             </tr>\n    //           );\n    //         })\n    //       : Array(10)\n    //           .fill(0, 0, 10)\n    //           .map((_, i) => {\n    //             if (i < customers.length) {\n    //               const mostRecentInteraction = customers[\n    //                 i\n    //               ].interactions.reduce((t, s) => {\n    //                 const currentDate = new Date(s);\n    //                 const previousDate = new Date(t);\n    //                 if (!previousDate) {\n    //                   return currentDate;\n    //                 } else {\n    //                   return previousDate > currentDate\n    //                     ? previousDate\n    //                     : currentDate;\n    //                 }\n    //               });\n\n    //               return (\n    //                 <tr key={shortid.generate()}>\n    //                   <td>{i + 1}</td>\n    //                   <td>\n    //                     <input type=\"checkbox\" name=\"\" id=\"\" />\n    //                   </td>\n    //                   <td>\n    //                     <i className=\"far fa-star\"></i>\n    //                   </td>\n    //                   <td>{customers[i].name}</td>\n    //                   <td>{customers[i].interactions.length}</td>\n    //                   <td>{mostRecentInteraction.toLocaleDateString()}</td>\n    //                 </tr>\n    //               );\n    //             } else {\n    //               return (\n    //                 <tr key={shortid.generate()}>\n    //                   <td>{i + 1}</td>\n    //                   <td></td>\n    //                   <td></td>\n    //                   <td></td>\n    //                   <td></td>\n    //                   <td></td>\n    //                 </tr>\n    //               );\n    //             }\n    //           })}\n    //   </tbody>\n    // </table>\n  );\n}\n\nexport default CustomerTable;\n"]},"metadata":{},"sourceType":"module"}