{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jtamedrano/Projects/BasicCRM-React/basic_crm/src/comps/Home/Dashboard/MainSection/CustomerTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from \"react\";\nimport shortid from \"shortid\";\nimport Table, { useTable } from \"react-table\";\n\nfunction CustomerTable(props) {\n  _s();\n\n  const {\n    customers\n  } = props;\n  const data = useMemo(() => customers, []);\n  const columns = useMemo(() => [{\n    Header: \"Name\",\n    accessor: \"name\"\n  }, {\n    Header: \"Favorite\",\n    accessor: \"favorite\"\n  }], []);\n  const table = useTable({\n    columns,\n    data\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = table;\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          children: column.render(\"Header\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: // Loop over the table rows\n      rows.map(row => {\n        // Prepare the row for display\n        prepareRow(row);\n        return (\n          /*#__PURE__*/\n          // Apply the row props\n          _jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: // Loop over the rows cells\n            row.cells.map(cell => {\n              // Apply the cell props\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: // Render the cell contents\n                cell.render(\"Cell\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        );\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CustomerTable, \"arSsCZMR6tBlOJPDjuvhKXu7wAg=\", false, function () {\n  return [useTable];\n});\n\n_c = CustomerTable;\nexport default CustomerTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerTable\");","map":{"version":3,"sources":["/Users/jtamedrano/Projects/BasicCRM-React/basic_crm/src/comps/Home/Dashboard/MainSection/CustomerTable.jsx"],"names":["React","useMemo","shortid","Table","useTable","CustomerTable","props","customers","data","columns","Header","accessor","table","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,aAAhC;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAgBD,KAAtB;AAEA,QAAME,IAAI,GAAGP,OAAO,CAAC,MAAMM,SAAP,EAAkB,EAAlB,CAApB;AAEA,QAAME,OAAO,GAAGR,OAAO,CACrB,MAAM,CACJ;AAAES,IAAAA,MAAM,EAAE,MAAV;AAAkBC,IAAAA,QAAQ,EAAE;AAA5B,GADI,EAEJ;AAAED,IAAAA,MAAM,EAAE,UAAV;AAAsBC,IAAAA,QAAQ,EAAE;AAAhC,GAFI,CADe,EAKrB,EALqB,CAAvB;AAQA,QAAMC,KAAK,GAAGR,QAAQ,CAAC;AAAEK,IAAAA,OAAF;AAAWD,IAAAA;AAAX,GAAD,CAAtB;AAEA,QAAM;AACJK,IAAAA,aADI;AAEJC,IAAAA,iBAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,IAJI;AAKJC,IAAAA;AALI,MAMFL,KANJ;AAOA,sBACE,sBAAWC,aAAa,EAAxB;AAAA,4BACE;AAAA,gBACGE,YAAY,CAACG,GAAb,CAAkBC,WAAD,iBAChB,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,kBACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAyBI,MAAD,iBACvB,mBAAQA,MAAM,CAACC,cAAP,EAAR;AAAA,oBAAkCD,MAAM,CAACE,MAAP,CAAc,QAAd;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,sBAAWV,iBAAiB,EAA5B;AAAA,gBAEI;AACAE,MAAAA,IAAI,CAACE,GAAL,CAAUO,GAAD,IAAS;AAChB;AACAR,QAAAA,UAAU,CAACQ,GAAD,CAAV;AACA;AAAA;AACE;AACA,6BAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA,sBAEI;AACAD,YAAAA,GAAG,CAACE,KAAJ,CAAUT,GAAV,CAAeU,IAAD,IAAU;AACtB;AACA,kCACE,mBAAQA,IAAI,CAACC,YAAL,EAAR;AAAA,0BAEI;AACAD,gBAAAA,IAAI,CAACJ,MAAL,CAAY,MAAZ;AAHJ;AAAA;AAAA;AAAA;AAAA,sBADF;AAQD,aAVD;AAHJ;AAAA;AAAA;AAAA;AAAA;AAFF;AAmBD,OAtBD;AAHJ;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD;;GA/DQnB,a;UAaOD,Q;;;KAbPC,a;AAiET,eAAeA,aAAf","sourcesContent":["import React, { useMemo } from \"react\";\nimport shortid from \"shortid\";\nimport Table, { useTable } from \"react-table\";\n\nfunction CustomerTable(props) {\n  const { customers } = props;\n\n  const data = useMemo(() => customers, []);\n\n  const columns = useMemo(\n    () => [\n      { Header: \"Name\", accessor: \"name\" },\n      { Header: \"Favorite\", accessor: \"favorite\" },\n    ],\n    []\n  );\n\n  const table = useTable({ columns, data });\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = table;\n  return (\n    <table {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {\n          // Loop over the table rows\n          rows.map((row) => {\n            // Prepare the row for display\n            prepareRow(row);\n            return (\n              // Apply the row props\n              <tr {...row.getRowProps()}>\n                {\n                  // Loop over the rows cells\n                  row.cells.map((cell) => {\n                    // Apply the cell props\n                    return (\n                      <td {...cell.getCellProps()}>\n                        {\n                          // Render the cell contents\n                          cell.render(\"Cell\")\n                        }\n                      </td>\n                    );\n                  })\n                }\n              </tr>\n            );\n          })\n        }\n      </tbody>\n    </table>\n  );\n}\n\nexport default CustomerTable;\n"]},"metadata":{},"sourceType":"module"}