{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jtamedrano/Projects/BasicCRM-React/basic_crm/src/comps/Home/Dashboard/MainSection/CustomerTable.jsx\";\nimport React from \"react\";\nimport shortid from \"shortid\";\nimport \"react-tabulator/lib/styles.css\"; // required styles\n\nimport \"react-tabulator/lib/css/tabulator.min.css\"; // theme\n\nimport { ReactTabulator as Tabulator } from \"react-tabulator\";\n\nfunction CustomerTable(props) {\n  const {\n    customers\n  } = props;\n  const columns = [{\n    title: \"Name\",\n    field: \"name\"\n  }, {\n    title: \"Favorite\",\n    field: \"favorite\"\n  }];\n  const data = [{\n    name: \"Jesse\",\n    favorite: false\n  }, {\n    name: \"Gaby\",\n    favorite: true\n  }, {\n    name: \"Mom\",\n    favorite: false\n  }, {\n    name: \"Dad\",\n    favorite: false\n  }, {\n    name: \"Melissa\",\n    favorite: false\n  }, {\n    name: \"Emily\",\n    favorite: false\n  }, {\n    name: \"Gisselle\",\n    favorite: false\n  }, {\n    name: \"Vixen\",\n    favorite: false\n  }];\n  const options = {\n    height: 150,\n    movableRows: true\n  };\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Tabulator, {\n      height: \"200\",\n      data: data,\n      columns: columns,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false) // <table>\n  //   <thead>\n  //     <tr>\n  //       <th></th>\n  //       <th>\n  //         <input type=\"checkbox\" name=\"\" id=\"\" />\n  //       </th>\n  //       <th></th>\n  //       <th>Name</th>\n  //       <th>Number of Interactions</th>\n  //       <th>Last Interaction</th>\n  //     </tr>\n  //   </thead>\n  //   <tbody>\n  //     {customers.length > 10\n  //       ? customers.map((customer, i) => {\n  //           const mostRecentInteraction = customer.interactions.reduce(\n  //             (t, s) => {\n  //               const currentDate = new Date(s);\n  //               const previousDate = new Date(t);\n  //               if (!previousDate) return currentDate;\n  //               else\n  //                 return previousDate > currentDate\n  //                   ? previousDate\n  //                   : currentDate;\n  //             }\n  //           );\n  //           return (\n  //             <tr key={shortid.generate()}>\n  //               <td>{i + 1}</td>\n  //               <td>\n  //                 <input type=\"checkbox\" name=\"\" id=\"\" />\n  //               </td>\n  //               <td>\n  //                 <i className=\"far fa-star\"></i>\n  //               </td>\n  //               <td>{customer.name}</td>\n  //               <td>{customer.interactions.length}</td>\n  //               <td>{mostRecentInteraction.toLocaleDateString()}</td>\n  //             </tr>\n  //           );\n  //         })\n  //       : Array(10)\n  //           .fill(0, 0, 10)\n  //           .map((_, i) => {\n  //             if (i < customers.length) {\n  //               const mostRecentInteraction = customers[\n  //                 i\n  //               ].interactions.reduce((t, s) => {\n  //                 const currentDate = new Date(s);\n  //                 const previousDate = new Date(t);\n  //                 if (!previousDate) {\n  //                   return currentDate;\n  //                 } else {\n  //                   return previousDate > currentDate\n  //                     ? previousDate\n  //                     : currentDate;\n  //                 }\n  //               });\n  //               return (\n  //                 <tr key={shortid.generate()}>\n  //                   <td>{i + 1}</td>\n  //                   <td>\n  //                     <input type=\"checkbox\" name=\"\" id=\"\" />\n  //                   </td>\n  //                   <td>\n  //                     <i className=\"far fa-star\"></i>\n  //                   </td>\n  //                   <td>{customers[i].name}</td>\n  //                   <td>{customers[i].interactions.length}</td>\n  //                   <td>{mostRecentInteraction.toLocaleDateString()}</td>\n  //                 </tr>\n  //               );\n  //             } else {\n  //               return (\n  //                 <tr key={shortid.generate()}>\n  //                   <td>{i + 1}</td>\n  //                   <td></td>\n  //                   <td></td>\n  //                   <td></td>\n  //                   <td></td>\n  //                   <td></td>\n  //                 </tr>\n  //               );\n  //             }\n  //           })}\n  //   </tbody>\n  // </table>\n  ;\n}\n\n_c = CustomerTable;\nexport default CustomerTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerTable\");","map":{"version":3,"sources":["/Users/jtamedrano/Projects/BasicCRM-React/basic_crm/src/comps/Home/Dashboard/MainSection/CustomerTable.jsx"],"names":["React","shortid","ReactTabulator","Tabulator","CustomerTable","props","customers","columns","title","field","data","name","favorite","options","height","movableRows","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAO,gCAAP,C,CAAyC;;AACzC,OAAO,2CAAP,C,CAAoD;;AACpD,SAASC,cAAc,IAAIC,SAA3B,QAA4C,iBAA5C;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAgBD,KAAtB;AAEA,QAAME,OAAO,GAAG,CACd;AAAEC,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GADc,EAEd;AAAED,IAAAA,KAAK,EAAE,UAAT;AAAqBC,IAAAA,KAAK,EAAE;AAA5B,GAFc,CAAhB;AAIA,QAAMC,IAAI,GAAG,CACX;AAAEC,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,QAAQ,EAAE;AAA3B,GADW,EAEX;AAAED,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAFW,EAGX;AAAED,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,QAAQ,EAAE;AAAzB,GAHW,EAIX;AAAED,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,QAAQ,EAAE;AAAzB,GAJW,EAKX;AAAED,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GALW,EAMX;AAAED,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,QAAQ,EAAE;AAA3B,GANW,EAOX;AAAED,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,QAAQ,EAAE;AAA9B,GAPW,EAQX;AAAED,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,QAAQ,EAAE;AAA3B,GARW,CAAb;AAWA,QAAMC,OAAO,GAAG;AAAEC,IAAAA,MAAM,EAAE,GAAV;AAAeC,IAAAA,WAAW,EAAE;AAA5B,GAAhB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAC,KAAlB;AAAwB,MAAA,IAAI,EAAEA,IAA9B;AAAoC,MAAA,OAAO,EAAEH,OAA7C;AAAsD,MAAA,OAAO,EAAEM;AAA/D;AAAA;AAAA;AAAA;AAAA;AADF,mBADF,CAIE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7FF;AA+FD;;KApHQT,a;AAsHT,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport shortid from \"shortid\";\nimport \"react-tabulator/lib/styles.css\"; // required styles\nimport \"react-tabulator/lib/css/tabulator.min.css\"; // theme\nimport { ReactTabulator as Tabulator } from \"react-tabulator\";\n\nfunction CustomerTable(props) {\n  const { customers } = props;\n\n  const columns = [\n    { title: \"Name\", field: \"name\" },\n    { title: \"Favorite\", field: \"favorite\" },\n  ];\n  const data = [\n    { name: \"Jesse\", favorite: false },\n    { name: \"Gaby\", favorite: true },\n    { name: \"Mom\", favorite: false },\n    { name: \"Dad\", favorite: false },\n    { name: \"Melissa\", favorite: false },\n    { name: \"Emily\", favorite: false },\n    { name: \"Gisselle\", favorite: false },\n    { name: \"Vixen\", favorite: false },\n  ];\n\n  const options = { height: 150, movableRows: true };\n\n  console.log(data);\n  return (\n    <>\n      <Tabulator height=\"200\" data={data} columns={columns} options={options} />\n    </>\n    // <table>\n    //   <thead>\n    //     <tr>\n    //       <th></th>\n    //       <th>\n    //         <input type=\"checkbox\" name=\"\" id=\"\" />\n    //       </th>\n    //       <th></th>\n    //       <th>Name</th>\n    //       <th>Number of Interactions</th>\n    //       <th>Last Interaction</th>\n    //     </tr>\n    //   </thead>\n    //   <tbody>\n    //     {customers.length > 10\n    //       ? customers.map((customer, i) => {\n    //           const mostRecentInteraction = customer.interactions.reduce(\n    //             (t, s) => {\n    //               const currentDate = new Date(s);\n    //               const previousDate = new Date(t);\n    //               if (!previousDate) return currentDate;\n    //               else\n    //                 return previousDate > currentDate\n    //                   ? previousDate\n    //                   : currentDate;\n    //             }\n    //           );\n\n    //           return (\n    //             <tr key={shortid.generate()}>\n    //               <td>{i + 1}</td>\n    //               <td>\n    //                 <input type=\"checkbox\" name=\"\" id=\"\" />\n    //               </td>\n    //               <td>\n    //                 <i className=\"far fa-star\"></i>\n    //               </td>\n    //               <td>{customer.name}</td>\n    //               <td>{customer.interactions.length}</td>\n    //               <td>{mostRecentInteraction.toLocaleDateString()}</td>\n    //             </tr>\n    //           );\n    //         })\n    //       : Array(10)\n    //           .fill(0, 0, 10)\n    //           .map((_, i) => {\n    //             if (i < customers.length) {\n    //               const mostRecentInteraction = customers[\n    //                 i\n    //               ].interactions.reduce((t, s) => {\n    //                 const currentDate = new Date(s);\n    //                 const previousDate = new Date(t);\n    //                 if (!previousDate) {\n    //                   return currentDate;\n    //                 } else {\n    //                   return previousDate > currentDate\n    //                     ? previousDate\n    //                     : currentDate;\n    //                 }\n    //               });\n\n    //               return (\n    //                 <tr key={shortid.generate()}>\n    //                   <td>{i + 1}</td>\n    //                   <td>\n    //                     <input type=\"checkbox\" name=\"\" id=\"\" />\n    //                   </td>\n    //                   <td>\n    //                     <i className=\"far fa-star\"></i>\n    //                   </td>\n    //                   <td>{customers[i].name}</td>\n    //                   <td>{customers[i].interactions.length}</td>\n    //                   <td>{mostRecentInteraction.toLocaleDateString()}</td>\n    //                 </tr>\n    //               );\n    //             } else {\n    //               return (\n    //                 <tr key={shortid.generate()}>\n    //                   <td>{i + 1}</td>\n    //                   <td></td>\n    //                   <td></td>\n    //                   <td></td>\n    //                   <td></td>\n    //                   <td></td>\n    //                 </tr>\n    //               );\n    //             }\n    //           })}\n    //   </tbody>\n    // </table>\n  );\n}\n\nexport default CustomerTable;\n"]},"metadata":{},"sourceType":"module"}